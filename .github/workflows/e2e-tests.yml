name: E2E Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Detect if running in Act
    - name: Check if running in Act
      id: check-act
      run: |
        if [ -n "$GITHUB_ACTIONS" ] && [ "$GITHUB_ACTOR" = "nektos/act" ]; then
          echo "RUNNING_IN_ACT=true" >> $GITHUB_ENV
          echo "RUNNING_IN_ACT=true" >> $GITHUB_OUTPUT
          echo "Running in Act - will skip some steps"
        else
          echo "RUNNING_IN_ACT=false" >> $GITHUB_ENV
          echo "RUNNING_IN_ACT=false" >> $GITHUB_OUTPUT
          echo "Running in GitHub Actions"
        fi
    
    # Navigate to the correct directory if needed
    - name: Set working directory
      id: set-dir
      run: |
        if [ -f "angular-app/package.json" ]; then
          echo "WORK_DIR=angular-app" >> $GITHUB_ENV
          echo "WORK_DIR=angular-app" >> $GITHUB_OUTPUT
          echo "Working in angular-app directory"
        else
          echo "WORK_DIR=." >> $GITHUB_ENV
          echo "WORK_DIR=." >> $GITHUB_OUTPUT
          echo "Working in root directory"
        fi
        
        # Debug current directory
        pwd
        ls -la
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        # Remove cache config when running in Act to avoid errors
        cache: ${{ env.RUNNING_IN_ACT != 'true' && 'npm' || '' }}
    
    # Install Chrome for tests but skip in Act
    - name: Install Chrome
      if: env.RUNNING_IN_ACT != 'true'
      run: |
        if [ -f /etc/os-release ]; then
          # For Linux environments
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          echo "Chrome installation completed"
          echo "CHROME_BIN=$(which google-chrome)" >> $GITHUB_ENV
          echo "Chrome found at: $(which google-chrome)"
        else
          # For macOS
          echo "Using local Chrome installation"
          if [ -f "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" ]; then
            echo "CHROME_BIN=/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" >> $GITHUB_ENV
          fi
        fi
    
    # Install dependencies for real
    - name: Install dependencies
      run: |
        cd ${{ env.WORK_DIR }}
        npm ci
    
    # Mock Cypress test for Act
    - name: Mock Cypress for Act
      if: env.RUNNING_IN_ACT == 'true'
      run: |
        cd ${{ env.WORK_DIR }}
        
        # Create mock directories for artifacts
        mkdir -p cypress/screenshots
        mkdir -p cypress/videos
        
        # Create a sample screenshot
        echo "Mock screenshot" > cypress/screenshots/mock.png
        
        # Create a sample video
        echo "Mock video file" > cypress/videos/mock.mp4
        
        echo "Mocked Cypress test artifacts created for Act"
    
    # Run Cypress only if not in Act
    - name: Cypress run
      if: env.RUNNING_IN_ACT != 'true'
      uses: cypress-io/github-action@v5
      with:
        working-directory: ${{ env.WORK_DIR }}
        build: npm run build
        start: npm start
        wait-on: 'http://localhost:4200'
        browser: chrome
        headed: false
        publish-summary: true
    
    # Use simplified artifact upload for Act
    - name: Upload artifacts in Act
      if: env.RUNNING_IN_ACT == 'true'
      run: |
        echo "Would upload these artifacts in real GitHub Actions:"
        echo "Screenshots:"
        ls -la ${{ env.WORK_DIR }}/cypress/screenshots || echo "No screenshots found"
        echo "Videos:"
        ls -la ${{ env.WORK_DIR }}/cypress/videos || echo "No videos found"
    
    # Real artifact uploads only run in GitHub Actions
    - name: Upload Cypress screenshots
      if: failure() && env.RUNNING_IN_ACT != 'true'
      uses: actions/upload-artifact@a8a3f3ad30e3422c6c61c1b8b8a24df9a3b06f5f # v3.1.3
      with:
        name: cypress-screenshots
        path: ${{ env.WORK_DIR }}/cypress/screenshots
    
    - name: Upload Cypress videos
      if: always() && env.RUNNING_IN_ACT != 'true'
      uses: actions/upload-artifact@a8a3f3ad30e3422c6c61c1b8b8a24df9a3b06f5f # v3.1.3
      with:
        name: cypress-videos
        path: ${{ env.WORK_DIR }}/cypress/videos
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const badge = '[![E2E Tests](https://img.shields.io/badge/e2e-passing-brightgreen)](https://github.com/${{ github.repository }}/actions/workflows/e2e-tests.yml)';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## E2E Tests Passed âœ…\n\n${badge}\n\nAll end-to-end tests are passing.`
          }) 